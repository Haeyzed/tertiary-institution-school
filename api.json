{
    "openapi": "3.1.0",
    "info": {
        "title": "Laravel",
        "version": "0.0.1"
    },
    "servers": [
        {
            "url": "http://tertiary-institution-school.test/api"
        }
    ],
    "paths": {
        "/v1/academic-sessions": {
            "get": {
                "operationId": "academic-sessions.index",
                "summary": "Display a listing of the academic sessions",
                "tags": [
                    "Academic Session",
                    "AcademicSession"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "academic-sessions.store",
                "summary": "Store a newly created academic session in storage",
                "tags": [
                    "Academic Session",
                    "AcademicSession"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AcademicSessionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/v1/academic-sessions/{id}": {
            "get": {
                "operationId": "academic-sessions.show",
                "summary": "Display the specified academic session",
                "tags": [
                    "Academic Session",
                    "AcademicSession"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "academic-sessions.update",
                "summary": "Update the specified academic session in storage",
                "tags": [
                    "Academic Session",
                    "AcademicSession"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AcademicSessionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "academic-sessions.destroy",
                "summary": "Remove the specified academic session from storage",
                "tags": [
                    "Academic Session",
                    "AcademicSession"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/academic-sessions/current": {
            "get": {
                "operationId": "academicSession.getCurrent",
                "summary": "Get the current academic session",
                "tags": [
                    "Academic Session",
                    "AcademicSession"
                ],
                "parameters": [
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/academic-sessions/{id}/set-current": {
            "put": {
                "operationId": "academicSession.setCurrent",
                "summary": "Set an academic session as current",
                "tags": [
                    "Academic Session",
                    "AcademicSession"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/announcements": {
            "get": {
                "operationId": "announcements.index",
                "summary": "Display a listing of the announcements",
                "tags": [
                    "Announcement"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "announcements.store",
                "summary": "Store a newly created announcement in storage",
                "tags": [
                    "Announcement"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AnnouncementRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/v1/announcements/{id}": {
            "get": {
                "operationId": "announcements.show",
                "summary": "Display the specified announcement",
                "tags": [
                    "Announcement"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "announcements.update",
                "summary": "Update the specified announcement in storage",
                "tags": [
                    "Announcement"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AnnouncementRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "announcements.destroy",
                "summary": "Remove the specified announcement from storage",
                "tags": [
                    "Announcement"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/users/{createdBy}/announcements": {
            "get": {
                "operationId": "announcement.getByCreator",
                "summary": "Get announcements by creator",
                "tags": [
                    "Announcement"
                ],
                "parameters": [
                    {
                        "name": "createdBy",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/announcements/recent": {
            "get": {
                "operationId": "announcement.getRecent",
                "summary": "Get recent announcements",
                "tags": [
                    "Announcement"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/assignments": {
            "get": {
                "operationId": "assignments.index",
                "summary": "Display a listing of the assignments",
                "tags": [
                    "Assignment"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "assignments.store",
                "summary": "Store a newly created assignment in storage",
                "tags": [
                    "Assignment"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AssignmentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/v1/assignments/{id}": {
            "get": {
                "operationId": "assignments.show",
                "summary": "Display the specified assignment",
                "tags": [
                    "Assignment"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "assignments.update",
                "summary": "Update the specified assignment in storage",
                "tags": [
                    "Assignment"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AssignmentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "assignments.destroy",
                "summary": "Remove the specified assignment from storage",
                "tags": [
                    "Assignment"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/courses/{courseId}/assignments": {
            "get": {
                "operationId": "assignment.getByCourse",
                "summary": "Get assignments by course",
                "tags": [
                    "Assignment"
                ],
                "parameters": [
                    {
                        "name": "courseId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/semesters/{semesterId}/assignments": {
            "get": {
                "operationId": "assignment.getBySemester",
                "summary": "Get assignments by semester",
                "tags": [
                    "Assignment"
                ],
                "parameters": [
                    {
                        "name": "semesterId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/staff/{staffId}/assignments": {
            "get": {
                "operationId": "assignment.getByStaff",
                "summary": "Get assignments by staff",
                "tags": [
                    "Assignment"
                ],
                "parameters": [
                    {
                        "name": "staffId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/assignments/upcoming": {
            "get": {
                "operationId": "assignment.getUpcoming",
                "summary": "Get upcoming assignments",
                "tags": [
                    "Assignment"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/assignments/submit": {
            "post": {
                "operationId": "assignment.submitAssignment",
                "summary": "Submit an assignment by a student",
                "tags": [
                    "Assignment"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StudentAssignmentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/v1/student-assignments/{id}/grade": {
            "put": {
                "operationId": "assignment.gradeAssignment",
                "summary": "Grade a student's assignment submission",
                "tags": [
                    "Assignment"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "score": {
                                        "type": "number",
                                        "minimum": 0
                                    },
                                    "remarks": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    }
                                },
                                "required": [
                                    "score"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/assignments/{assignmentId}/submissions": {
            "get": {
                "operationId": "assignment.getStudentAssignmentsByAssignment",
                "summary": "Get student assignments by assignment",
                "tags": [
                    "Assignment"
                ],
                "parameters": [
                    {
                        "name": "assignmentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/students/{studentId}/assignments": {
            "get": {
                "operationId": "assignment.getStudentAssignmentsByStudent",
                "summary": "Get student assignments by student",
                "tags": [
                    "Assignment"
                ],
                "parameters": [
                    {
                        "name": "studentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/courses": {
            "get": {
                "operationId": "courses.index",
                "summary": "Display a listing of the courses",
                "tags": [
                    "Course"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "courses.store",
                "summary": "Store a newly created course in storage",
                "tags": [
                    "Course"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CourseRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/v1/courses/{id}": {
            "get": {
                "operationId": "courses.show",
                "summary": "Display the specified course",
                "tags": [
                    "Course"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "courses.update",
                "summary": "Update the specified course in storage",
                "tags": [
                    "Course"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CourseRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "courses.destroy",
                "summary": "Remove the specified course from storage",
                "tags": [
                    "Course"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/departments/{departmentId}/courses": {
            "get": {
                "operationId": "course.getByDepartment",
                "summary": "Get courses by department",
                "tags": [
                    "Course"
                ],
                "parameters": [
                    {
                        "name": "departmentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/semesters/{semesterId}/courses": {
            "get": {
                "operationId": "course.getBySemester",
                "summary": "Get courses by semester",
                "tags": [
                    "Course"
                ],
                "parameters": [
                    {
                        "name": "semesterId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/courses/assign": {
            "post": {
                "operationId": "course.assignToSemester",
                "summary": "Assign a course to a semester with a staff member",
                "tags": [
                    "Course"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "course_id": {
                                        "type": "integer"
                                    },
                                    "semester_id": {
                                        "type": "integer"
                                    },
                                    "staff_id": {
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "course_id",
                                    "semester_id",
                                    "staff_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/courses/remove": {
            "post": {
                "operationId": "course.removeFromSemester",
                "summary": "Remove a course from a semester",
                "tags": [
                    "Course"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "course_id": {
                                        "type": "integer"
                                    },
                                    "semester_id": {
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "course_id",
                                    "semester_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/dashboard": {
            "get": {
                "operationId": "dashboard.index",
                "summary": "Get all dashboard metrics",
                "tags": [
                    "Dashboard"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/dashboard/general-stats": {
            "get": {
                "operationId": "dashboard.generalStats",
                "summary": "Get general statistics for the dashboard",
                "tags": [
                    "Dashboard"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/dashboard/academic-stats": {
            "get": {
                "operationId": "dashboard.academicStats",
                "summary": "Get academic statistics for the dashboard",
                "tags": [
                    "Dashboard"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/dashboard/financial-stats": {
            "get": {
                "operationId": "dashboard.financialStats",
                "summary": "Get financial statistics for the dashboard",
                "tags": [
                    "Dashboard"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/dashboard/student-stats": {
            "get": {
                "operationId": "dashboard.studentStats",
                "summary": "Get student statistics for the dashboard",
                "tags": [
                    "Dashboard"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/dashboard/staff-stats": {
            "get": {
                "operationId": "dashboard.staffStats",
                "summary": "Get staff statistics for the dashboard",
                "tags": [
                    "Dashboard"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/dashboard/performance-stats": {
            "get": {
                "operationId": "dashboard.performanceStats",
                "summary": "Get academic performance statistics for the dashboard",
                "tags": [
                    "Dashboard"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/dashboard/enrollment-stats": {
            "get": {
                "operationId": "dashboard.enrollmentStats",
                "summary": "Get enrollment statistics for the dashboard",
                "tags": [
                    "Dashboard"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/dashboard/notification-stats": {
            "get": {
                "operationId": "dashboard.notificationStats",
                "summary": "Get notification statistics for the dashboard",
                "tags": [
                    "Dashboard"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/dashboard/recent-activities": {
            "get": {
                "operationId": "dashboard.recentActivities",
                "summary": "Get recent activities for the dashboard",
                "tags": [
                    "Dashboard"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/dashboard/performance-trends": {
            "get": {
                "operationId": "dashboard.performanceTrends",
                "summary": "Get performance trends over time",
                "tags": [
                    "Dashboard"
                ],
                "parameters": [
                    {
                        "name": "months",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 6
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/dashboard/top-performing-students": {
            "get": {
                "operationId": "dashboard.topPerformingStudents",
                "summary": "Get top performing students",
                "tags": [
                    "Dashboard"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/dashboard/course-performance-stats": {
            "get": {
                "operationId": "dashboard.coursePerformanceStats",
                "summary": "Get course performance statistics",
                "tags": [
                    "Dashboard"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/dashboard/score-distribution": {
            "get": {
                "operationId": "dashboard.scoreDistribution",
                "summary": "Get score distribution statistics",
                "tags": [
                    "Dashboard"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/dashboard/grade-distribution": {
            "get": {
                "operationId": "dashboard.gradeDistribution",
                "summary": "Get grade distribution statistics",
                "tags": [
                    "Dashboard"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/dashboard/payments-by-method": {
            "get": {
                "operationId": "dashboard.paymentsByMethod",
                "summary": "Get payments by method statistics",
                "tags": [
                    "Dashboard"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/dashboard/payments-by-month": {
            "get": {
                "operationId": "dashboard.paymentsByMonth",
                "summary": "Get payments by month statistics",
                "tags": [
                    "Dashboard"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/dashboard/students-by-program": {
            "get": {
                "operationId": "dashboard.studentsByProgram",
                "summary": "Get students by program statistics",
                "tags": [
                    "Dashboard"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/dashboard/students-by-gender": {
            "get": {
                "operationId": "dashboard.studentsByGender",
                "summary": "Get students by gender statistics",
                "tags": [
                    "Dashboard"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/departments": {
            "get": {
                "operationId": "departments.index",
                "summary": "Display a listing of the departments",
                "tags": [
                    "Department"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "departments.store",
                "summary": "Store a newly created department in storage",
                "tags": [
                    "Department"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DepartmentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/v1/departments/{id}": {
            "get": {
                "operationId": "departments.show",
                "summary": "Display the specified department",
                "tags": [
                    "Department"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "departments.update",
                "summary": "Update the specified department in storage",
                "tags": [
                    "Department"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DepartmentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "departments.destroy",
                "summary": "Remove the specified department from storage",
                "tags": [
                    "Department"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/faculties/{facultyId}/departments": {
            "get": {
                "operationId": "department.getByFaculty",
                "summary": "Get departments by faculty",
                "tags": [
                    "Department"
                ],
                "parameters": [
                    {
                        "name": "facultyId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/departments/search/{term}": {
            "get": {
                "operationId": "department.search",
                "summary": "Search departments by name or code",
                "tags": [
                    "Department"
                ],
                "parameters": [
                    {
                        "name": "term",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "term",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "minLength": 2
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/exams": {
            "get": {
                "operationId": "exams.index",
                "summary": "Display a listing of the exams",
                "tags": [
                    "Exam"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "exams.store",
                "summary": "Store a newly created exam in storage",
                "tags": [
                    "Exam"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExamRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/v1/exams/{id}": {
            "get": {
                "operationId": "exams.show",
                "summary": "Display the specified exam",
                "tags": [
                    "Exam"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "exams.update",
                "summary": "Update the specified exam in storage",
                "tags": [
                    "Exam"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExamRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "exams.destroy",
                "summary": "Remove the specified exam from storage",
                "tags": [
                    "Exam"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/courses/{courseId}/exams": {
            "get": {
                "operationId": "exam.getByCourse",
                "summary": "Get exams by course",
                "tags": [
                    "Exam"
                ],
                "parameters": [
                    {
                        "name": "courseId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/semesters/{semesterId}/exams": {
            "get": {
                "operationId": "exam.getBySemester",
                "summary": "Get exams by semester",
                "tags": [
                    "Exam"
                ],
                "parameters": [
                    {
                        "name": "semesterId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/exams/upcoming": {
            "get": {
                "operationId": "exam.getUpcoming",
                "summary": "Get upcoming exams",
                "tags": [
                    "Exam"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/exams/{id}/status": {
            "put": {
                "operationId": "exam.updateStatus",
                "summary": "Update exam status",
                "tags": [
                    "Exam"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "ongoing",
                                            "completed",
                                            "cancelled"
                                        ]
                                    }
                                },
                                "required": [
                                    "status"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/faculties": {
            "get": {
                "operationId": "faculties.index",
                "summary": "Display a listing of the faculties",
                "tags": [
                    "Faculty"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "faculties.store",
                "summary": "Store a newly created faculty in storage",
                "tags": [
                    "Faculty"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FacultyRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/v1/faculties/{id}": {
            "get": {
                "operationId": "faculties.show",
                "summary": "Display the specified faculty",
                "tags": [
                    "Faculty"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "faculties.update",
                "summary": "Update the specified faculty in storage",
                "tags": [
                    "Faculty"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FacultyRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "faculties.destroy",
                "summary": "Remove the specified faculty from storage",
                "tags": [
                    "Faculty"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/faculties/search/{term}": {
            "get": {
                "operationId": "faculty.search",
                "summary": "Search faculties by name or code",
                "tags": [
                    "Faculty"
                ],
                "parameters": [
                    {
                        "name": "term",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "term",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "minLength": 2
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/fees": {
            "get": {
                "operationId": "fees.index",
                "summary": "Display a listing of the fees",
                "tags": [
                    "Fee"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "fees.store",
                "summary": "Store a newly created fee in storage",
                "tags": [
                    "Fee"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FeeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/v1/fees/{id}": {
            "get": {
                "operationId": "fees.show",
                "summary": "Display the specified fee",
                "tags": [
                    "Fee"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "fees.update",
                "summary": "Update the specified fee in storage",
                "tags": [
                    "Fee"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FeeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "fees.destroy",
                "summary": "Remove the specified fee from storage",
                "tags": [
                    "Fee"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/programs/{programId}/fees": {
            "get": {
                "operationId": "fee.getByProgram",
                "summary": "Get fees by program",
                "tags": [
                    "Fee"
                ],
                "parameters": [
                    {
                        "name": "programId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/semesters/{semesterId}/fees": {
            "get": {
                "operationId": "fee.getBySemester",
                "summary": "Get fees by semester",
                "tags": [
                    "Fee"
                ],
                "parameters": [
                    {
                        "name": "semesterId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/fees/current-semester": {
            "get": {
                "operationId": "fee.getCurrentSemesterFees",
                "summary": "Get current semester fees",
                "tags": [
                    "Fee"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/grades": {
            "get": {
                "operationId": "grades.index",
                "summary": "Display a listing of the grades",
                "tags": [
                    "Grade"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "grades.store",
                "summary": "Store a newly created grade in storage",
                "tags": [
                    "Grade"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GradeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/v1/grades/{id}": {
            "get": {
                "operationId": "grades.show",
                "summary": "Display the specified grade",
                "tags": [
                    "Grade"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "grades.update",
                "summary": "Update the specified grade in storage",
                "tags": [
                    "Grade"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GradeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "grades.destroy",
                "summary": "Remove the specified grade from storage",
                "tags": [
                    "Grade"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/grades/by-score": {
            "get": {
                "operationId": "grade.getByScore",
                "summary": "Get grade by score",
                "tags": [
                    "Grade"
                ],
                "parameters": [
                    {
                        "name": "score",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/notifications": {
            "get": {
                "operationId": "notifications.index",
                "summary": "Display a listing of the notifications",
                "tags": [
                    "Notification"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "notifications.store",
                "summary": "Store a newly created notification in storage",
                "tags": [
                    "Notification"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/v1/notifications/{id}": {
            "get": {
                "operationId": "notifications.show",
                "summary": "Display the specified notification",
                "tags": [
                    "Notification"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "notifications.update",
                "summary": "Update the specified notification in storage",
                "tags": [
                    "Notification"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "notifications.destroy",
                "summary": "Remove the specified notification from storage",
                "tags": [
                    "Notification"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/users/{userId}/notifications": {
            "get": {
                "operationId": "notification.getByUser",
                "summary": "Get notifications by user",
                "tags": [
                    "Notification"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/users/{userId}/notifications/unread": {
            "get": {
                "operationId": "notification.getUnreadByUser",
                "summary": "Get unread notifications by user",
                "tags": [
                    "Notification"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/notifications/{id}/mark-as-read": {
            "put": {
                "operationId": "notification.markAsRead",
                "summary": "Mark a notification as read",
                "tags": [
                    "Notification"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/users/{userId}/notifications/mark-all-as-read": {
            "put": {
                "operationId": "notification.markAllAsRead",
                "summary": "Mark all notifications as read for a user",
                "tags": [
                    "Notification"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/parents": {
            "get": {
                "operationId": "parents.index",
                "summary": "Display a listing of the parents",
                "tags": [
                    "Parent"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "parents.store",
                "summary": "Store a newly created parent in storage",
                "tags": [
                    "Parent"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ParentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/v1/parents/{id}": {
            "get": {
                "operationId": "parents.show",
                "summary": "Display the specified parent",
                "tags": [
                    "Parent"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "parents.update",
                "summary": "Update the specified parent in storage",
                "tags": [
                    "Parent"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ParentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "parents.destroy",
                "summary": "Remove the specified parent from storage",
                "tags": [
                    "Parent"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/parents/search/{term}": {
            "get": {
                "operationId": "parent.search",
                "summary": "Search parents by name or email",
                "tags": [
                    "Parent"
                ],
                "parameters": [
                    {
                        "name": "term",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "term",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "minLength": 2
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/payments": {
            "get": {
                "operationId": "payments.index",
                "summary": "Display a listing of the payments",
                "tags": [
                    "Payment"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "payments.store",
                "summary": "Store a newly created payment in storage",
                "tags": [
                    "Payment"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/v1/payments/{id}": {
            "get": {
                "operationId": "payments.show",
                "summary": "Display the specified payment",
                "tags": [
                    "Payment"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "payments.update",
                "summary": "Update the specified payment in storage",
                "tags": [
                    "Payment"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "payments.destroy",
                "summary": "Remove the specified payment from storage",
                "tags": [
                    "Payment"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/students/{studentId}/payments": {
            "get": {
                "operationId": "payment.getByStudent",
                "summary": "Get payments by student",
                "tags": [
                    "Payment"
                ],
                "parameters": [
                    {
                        "name": "studentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/fees/{feeId}/payments": {
            "get": {
                "operationId": "payment.getByFee",
                "summary": "Get payments by fee",
                "tags": [
                    "Payment"
                ],
                "parameters": [
                    {
                        "name": "feeId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/students/{studentId}/fee-balance": {
            "get": {
                "operationId": "payment.getStudentFeeBalance_0",
                "summary": "Get student's fee balance",
                "tags": [
                    "Payment"
                ],
                "parameters": [
                    {
                        "name": "studentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/students/{studentId}/fees/{feeId}/balance": {
            "get": {
                "operationId": "payment.getStudentFeeBalance_0",
                "summary": "Get student's fee balance",
                "tags": [
                    "Payment"
                ],
                "parameters": [
                    {
                        "name": "studentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "feeId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ],
                            "default": null
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/programs": {
            "get": {
                "operationId": "programs.index",
                "summary": "Display a listing of the programs",
                "tags": [
                    "Program"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "programs.store",
                "summary": "Store a newly created program in storage",
                "tags": [
                    "Program"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProgramRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/v1/programs/{id}": {
            "get": {
                "operationId": "programs.show",
                "summary": "Display the specified program",
                "tags": [
                    "Program"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "programs.update",
                "summary": "Update the specified program in storage",
                "tags": [
                    "Program"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProgramRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "programs.destroy",
                "summary": "Remove the specified program from storage",
                "tags": [
                    "Program"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/departments/{departmentId}/programs": {
            "get": {
                "operationId": "program.getByDepartment",
                "summary": "Get programs by department",
                "tags": [
                    "Program"
                ],
                "parameters": [
                    {
                        "name": "departmentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/programs/search/{term}": {
            "get": {
                "operationId": "program.search",
                "summary": "Search programs by name or code",
                "tags": [
                    "Program"
                ],
                "parameters": [
                    {
                        "name": "term",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "term",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "minLength": 2
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/results": {
            "get": {
                "operationId": "results.index",
                "summary": "Display a listing of the results",
                "tags": [
                    "Result"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "results.store",
                "summary": "Store a newly created result in storage",
                "tags": [
                    "Result"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/v1/results/{id}": {
            "get": {
                "operationId": "results.show",
                "summary": "Display the specified result",
                "tags": [
                    "Result"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "results.update",
                "summary": "Update the specified result in storage",
                "tags": [
                    "Result"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "results.destroy",
                "summary": "Remove the specified result from storage",
                "tags": [
                    "Result"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/students/{studentId}/results": {
            "get": {
                "operationId": "result.getByStudent",
                "summary": "Get results by student",
                "tags": [
                    "Result"
                ],
                "parameters": [
                    {
                        "name": "studentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/courses/{courseId}/results": {
            "get": {
                "operationId": "result.getByCourse",
                "summary": "Get results by course",
                "tags": [
                    "Result"
                ],
                "parameters": [
                    {
                        "name": "courseId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/exams/{examId}/results": {
            "get": {
                "operationId": "result.getByExam",
                "summary": "Get results by exam",
                "tags": [
                    "Result"
                ],
                "parameters": [
                    {
                        "name": "examId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/semesters/{semesterId}/results": {
            "get": {
                "operationId": "result.getBySemester",
                "summary": "Get results by semester",
                "tags": [
                    "Result"
                ],
                "parameters": [
                    {
                        "name": "semesterId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/students/{studentId}/semesters/{semesterId}/gpa": {
            "get": {
                "operationId": "result.getStudentSemesterGPA",
                "summary": "Get student's semester GPA",
                "tags": [
                    "Result"
                ],
                "parameters": [
                    {
                        "name": "studentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "semesterId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/students/{studentId}/gpa": {
            "get": {
                "operationId": "result.getStudentCumulativeGPA",
                "summary": "Get student's cumulative GPA",
                "tags": [
                    "Result"
                ],
                "parameters": [
                    {
                        "name": "studentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/semesters": {
            "get": {
                "operationId": "semesters.index",
                "summary": "Display a listing of the semesters",
                "tags": [
                    "Semester"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "semesters.store",
                "summary": "Store a newly created semester in storage",
                "tags": [
                    "Semester"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SemesterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/v1/semesters/{id}": {
            "get": {
                "operationId": "semesters.show",
                "summary": "Display the specified semester",
                "tags": [
                    "Semester"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "semesters.update",
                "summary": "Update the specified semester in storage",
                "tags": [
                    "Semester"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SemesterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "semesters.destroy",
                "summary": "Remove the specified semester from storage",
                "tags": [
                    "Semester"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/academic-sessions/{academicSessionId}/semesters": {
            "get": {
                "operationId": "semester.getByAcademicSession",
                "summary": "Get semesters by academic session",
                "tags": [
                    "Semester"
                ],
                "parameters": [
                    {
                        "name": "academicSessionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/semesters/current": {
            "get": {
                "operationId": "semester.getCurrent",
                "summary": "Get current semesters (semesters in the current academic session)",
                "tags": [
                    "Semester"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/staff": {
            "get": {
                "operationId": "staff.index",
                "summary": "Display a listing of the staff",
                "tags": [
                    "Staff"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "staff.store",
                "summary": "Store a newly created staff in storage",
                "tags": [
                    "Staff"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StaffRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/v1/staff/{id}": {
            "get": {
                "operationId": "staff.show",
                "summary": "Display the specified staff",
                "tags": [
                    "Staff"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "staff.update",
                "summary": "Update the specified staff in storage",
                "tags": [
                    "Staff"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StaffRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "staff.destroy",
                "summary": "Remove the specified staff from storage",
                "tags": [
                    "Staff"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/departments/{departmentId}/staff": {
            "get": {
                "operationId": "staff.getByDepartment",
                "summary": "Get staff by department",
                "tags": [
                    "Staff"
                ],
                "parameters": [
                    {
                        "name": "departmentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/staff/search/{term}": {
            "get": {
                "operationId": "staff.search",
                "summary": "Search staff by name, email, or staff ID",
                "tags": [
                    "Staff"
                ],
                "parameters": [
                    {
                        "name": "term",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "term",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "minLength": 2
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/students": {
            "get": {
                "operationId": "students.index",
                "summary": "Display a listing of the students",
                "tags": [
                    "Student"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "students.store",
                "summary": "Store a newly created student in storage",
                "tags": [
                    "Student"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StudentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/v1/students/{id}": {
            "get": {
                "operationId": "students.show",
                "summary": "Display the specified student",
                "tags": [
                    "Student"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "students.update",
                "summary": "Update the specified student in storage",
                "tags": [
                    "Student"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StudentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "students.destroy",
                "summary": "Remove the specified student from storage",
                "tags": [
                    "Student"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/programs/{programId}/students": {
            "get": {
                "operationId": "student.getByProgram",
                "summary": "Get students by program",
                "tags": [
                    "Student"
                ],
                "parameters": [
                    {
                        "name": "programId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/students/enroll": {
            "post": {
                "operationId": "student.enrollInCourse",
                "summary": "Enroll a student in a course",
                "tags": [
                    "Student"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "student_id": {
                                        "type": "integer"
                                    },
                                    "course_id": {
                                        "type": "integer"
                                    },
                                    "semester_id": {
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "student_id",
                                    "course_id",
                                    "semester_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/students/unenroll": {
            "post": {
                "operationId": "student.unenrollFromCourse",
                "summary": "Unenroll a student from a course",
                "tags": [
                    "Student"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "student_id": {
                                        "type": "integer"
                                    },
                                    "course_id": {
                                        "type": "integer"
                                    },
                                    "semester_id": {
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "student_id",
                                    "course_id",
                                    "semester_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/users": {
            "get": {
                "operationId": "users.index",
                "summary": "Display a listing of the users",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "users.store",
                "summary": "Store a newly created user in storage",
                "tags": [
                    "User"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/v1/users/{id}": {
            "get": {
                "operationId": "users.show",
                "summary": "Display the specified user",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "users.update",
                "summary": "Update the specified user in storage",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "users.destroy",
                "summary": "Remove the specified user from storage",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/users/search/{term}": {
            "get": {
                "operationId": "user.search",
                "summary": "Search for users by name or email",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "term",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "term",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "minLength": 2
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AcademicSessionRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the academic session. A human-readable label.",
                        "example": "2024/2025 Academic Session"
                    },
                    "start_date": {
                        "type": "string",
                        "description": "The start date of the academic session. Must be a valid date format.",
                        "example": "2024-09-01"
                    },
                    "end_date": {
                        "type": "string",
                        "description": "The end date of the academic session. Must be a valid date and after the start date.",
                        "example": "2025-06-30"
                    },
                    "is_current": {
                        "type": [
                            "boolean",
                            "null"
                        ],
                        "description": "Indicates if this is the current academic session. Optional boolean flag.",
                        "example": true
                    }
                },
                "required": [
                    "name",
                    "start_date",
                    "end_date"
                ],
                "title": "AcademicSessionRequest"
            },
            "AnnouncementRequest": {
                "type": "object",
                "description": "Request validation for announcement operations.\n\nHandles validation for creating and updating announcements.",
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "The title of the announcement. A descriptive title for the announcement.",
                        "example": "Important Notice: Exam Schedule Update"
                    },
                    "message": {
                        "type": "string",
                        "description": "The main content/message of the announcement. Detailed information about the announcement.",
                        "example": "The final exam schedule has been updated. Please check your student portal for details."
                    },
                    "created_by": {
                        "type": "integer",
                        "description": "The ID of the user who created the announcement. Must reference an existing user in the system.",
                        "example": 1
                    },
                    "date": {
                        "type": "string",
                        "description": "The date when the announcement was made. Must be a valid date format.",
                        "example": "2024-12-01"
                    }
                },
                "required": [
                    "title",
                    "message",
                    "created_by",
                    "date"
                ],
                "title": "AnnouncementRequest"
            },
            "AssignmentRequest": {
                "type": "object",
                "description": "Request validation for assignment operations.\n\nHandles validation for creating and updating assignments.",
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "The title of the assignment. A descriptive title for the assignment.",
                        "example": "Data Structures and Algorithms Assignment 1"
                    },
                    "description": {
                        "type": "string",
                        "description": "The detailed description of the assignment. Instructions and requirements for the assignment.",
                        "example": "Implement a binary search tree with insert, delete, and search operations."
                    },
                    "course_id": {
                        "type": "integer",
                        "description": "The ID of the course this assignment belongs to. Must reference an existing course.",
                        "example": 1
                    },
                    "semester_id": {
                        "type": "integer",
                        "description": "The ID of the semester this assignment is for. Must reference an existing semester.",
                        "example": 1
                    },
                    "staff_id": {
                        "type": "integer",
                        "description": "The ID of the staff member who created the assignment. Must reference an existing staff member.",
                        "example": 1
                    },
                    "due_date": {
                        "type": "string",
                        "description": "The due date for the assignment submission. Must be a valid date format.",
                        "example": "2024-12-15"
                    },
                    "total_marks": {
                        "type": "number",
                        "description": "The total marks/points for the assignment. Must be a positive number.",
                        "example": 100
                    },
                    "attachment": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Optional attachment file path or URL. Reference to any attached files for the assignment.",
                        "example": "/uploads/assignments/assignment1.pdf"
                    }
                },
                "required": [
                    "title",
                    "description",
                    "course_id",
                    "semester_id",
                    "staff_id",
                    "due_date",
                    "total_marks"
                ],
                "title": "AssignmentRequest"
            },
            "CourseRequest": {
                "type": "object",
                "description": "Request validation for course operations.\n\nHandles validation for creating and updating courses.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the course. A descriptive name for the course.",
                        "example": "Data Structures and Algorithms"
                    },
                    "code": {
                        "type": "string",
                        "description": "The unique course code. A short identifier for the course, must be unique.",
                        "example": "CS201"
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Optional description of the course. Detailed information about the course content and objectives.",
                        "example": "This course covers fundamental data structures and algorithms used in computer science."
                    },
                    "credit_hours": {
                        "type": "integer",
                        "description": "The number of credit hours for the course. Must be at least 1 credit hour.",
                        "example": 3
                    },
                    "department_id": {
                        "type": "integer",
                        "description": "The ID of the department offering the course. Must reference an existing department.",
                        "example": 1
                    }
                },
                "required": [
                    "name",
                    "code",
                    "credit_hours",
                    "department_id"
                ],
                "title": "CourseRequest"
            },
            "DepartmentRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the department. A string with a maximum length of 255 characters.",
                        "example": "Department of Computer Science"
                    },
                    "code": {
                        "type": "string",
                        "description": "The code of the department. A short unique identifier with a maximum of 50 characters.",
                        "example": "CSC"
                    },
                    "faculty_id": {
                        "type": "integer",
                        "description": "The ID of the faculty this department belongs to. Must exist in the `faculties` table.",
                        "example": 1
                    }
                },
                "required": [
                    "name",
                    "code",
                    "faculty_id"
                ],
                "title": "DepartmentRequest"
            },
            "ExamRequest": {
                "type": "object",
                "description": "Request validation for exam operations.\n\nHandles validation for creating and updating exams.",
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "The title of the exam. A descriptive title for the exam.",
                        "example": "Final Exam - Data Structures"
                    },
                    "course_id": {
                        "type": "integer",
                        "description": "The ID of the course this exam is for. Must reference an existing course.",
                        "example": 1
                    },
                    "semester_id": {
                        "type": "integer",
                        "description": "The ID of the semester this exam is scheduled for. Must reference an existing semester.",
                        "example": 1
                    },
                    "exam_date": {
                        "type": "string",
                        "description": "The date when the exam will be conducted. Must be a valid date format.",
                        "example": "2024-12-20"
                    },
                    "start_time": {
                        "type": "string",
                        "description": "The start time of the exam. Must be in HH:MM format.",
                        "example": "09:00"
                    },
                    "end_time": {
                        "type": "string",
                        "description": "The end time of the exam. Must be in HH:MM format and after start time.",
                        "example": "12:00"
                    },
                    "total_marks": {
                        "type": "number",
                        "description": "The total marks for the exam. Must be a positive number.",
                        "example": 100
                    },
                    "venue": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The venue where the exam will be conducted. Optional location information.",
                        "example": "Main Hall A"
                    },
                    "status": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The current status of the exam. Must be one of the predefined exam statuses.",
                        "example": "scheduled"
                    }
                },
                "required": [
                    "title",
                    "course_id",
                    "semester_id",
                    "exam_date",
                    "start_time",
                    "end_time",
                    "total_marks"
                ],
                "title": "ExamRequest"
            },
            "FacultyRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the faculty. This should be a valid string with a maximum length of 255 characters.",
                        "example": "Faculty of Science"
                    },
                    "code": {
                        "type": "string",
                        "description": "The code of the faculty. This should be a short unique identifier with a maximum length of 50 characters.",
                        "example": "SCI"
                    }
                },
                "required": [
                    "name",
                    "code"
                ],
                "title": "FacultyRequest"
            },
            "FeeRequest": {
                "type": "object",
                "description": "Request validation for fee operations.\n\nHandles validation for creating and updating fees.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the fee. A descriptive name for the fee type.",
                        "example": "Tuition Fee"
                    },
                    "amount": {
                        "type": "number",
                        "description": "The amount of the fee. Must be a positive number representing the fee amount.",
                        "example": 5000
                    },
                    "program_id": {
                        "type": "integer",
                        "description": "The ID of the program this fee applies to. Must reference an existing program.",
                        "example": 1
                    },
                    "semester_id": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "description": "The ID of the semester this fee applies to. Optional reference to a specific semester.",
                        "example": 1
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Optional description of the fee. Additional details about what the fee covers.",
                        "example": "Annual tuition fee for undergraduate programs"
                    }
                },
                "required": [
                    "name",
                    "amount",
                    "program_id"
                ],
                "title": "FeeRequest"
            },
            "GradeRequest": {
                "type": "object",
                "description": "Request validation for grade operations.\n\nHandles validation for creating and updating grade scales.",
                "properties": {
                    "grade": {
                        "type": "string",
                        "description": "The grade letter or symbol. A short representation of the grade (e.g., A, B+, C).",
                        "example": "A"
                    },
                    "min_score": {
                        "type": "number",
                        "description": "The minimum score for this grade. Must be between 0-100 and less than or equal to max_score.",
                        "example": 90
                    },
                    "max_score": {
                        "type": "number",
                        "description": "The maximum score for this grade. Must be between 0-100 and greater than or equal to min_score.",
                        "example": 100
                    },
                    "remark": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Optional remark or description for the grade. Additional information about the grade level.",
                        "example": "Excellent performance"
                    }
                },
                "required": [
                    "grade",
                    "min_score",
                    "max_score"
                ],
                "title": "GradeRequest"
            },
            "NotificationRequest": {
                "type": "object",
                "description": "Request validation for notification operations.\n\nHandles validation for creating and updating notifications.",
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "The title of the notification. A brief, descriptive title for the notification.",
                        "example": "Assignment Due Reminder"
                    },
                    "message": {
                        "type": "string",
                        "description": "The main content of the notification. Detailed message content for the notification.",
                        "example": "Your assignment for CS201 is due tomorrow at 11:59 PM."
                    },
                    "user_id": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "description": "The ID of the user who should receive the notification. Optional - if null, notification may be for all users.",
                        "example": 1
                    },
                    "type": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The type/category of the notification. Must be one of the predefined notification types.",
                        "example": "assignment"
                    },
                    "is_read": {
                        "type": [
                            "boolean",
                            "null"
                        ],
                        "description": "Whether the notification has been read. Boolean flag indicating read status.",
                        "example": false
                    }
                },
                "required": [
                    "title",
                    "message"
                ],
                "title": "NotificationRequest"
            },
            "ParentRequest": {
                "type": "object",
                "description": "Request validation for parent operations.\n\nHandles validation for creating and updating parent records.",
                "properties": {
                    "name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The full name of the parent. Optional full name of the parent/guardian.",
                        "example": "John Smith"
                    },
                    "email": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The email address of the parent. Must be unique and a valid email format.",
                        "example": "john.smith@email.com"
                    },
                    "password": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The password for the parent's account. Must be at least 8 characters long.",
                        "example": "securepassword123"
                    },
                    "phone": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The phone number of the parent. Contact phone number for the parent.",
                        "example": "+1234567890"
                    },
                    "gender": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The gender of the parent. Must be one of the predefined gender options.",
                        "example": "male"
                    },
                    "address": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The residential address of the parent. Full address information.",
                        "example": "123 Main Street, City, State, ZIP"
                    },
                    "occupation": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The occupation of the parent. Professional occupation or job title.",
                        "example": "Software Engineer"
                    },
                    "relationship": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The relationship to the student. How the parent is related to the student.",
                        "example": "Father"
                    }
                },
                "title": "ParentRequest"
            },
            "PaymentRequest": {
                "type": "object",
                "description": "Request validation for payment operations.\n\nHandles validation for creating and updating payment records.",
                "properties": {
                    "student_id": {
                        "type": "integer",
                        "description": "The ID of the student making the payment. Must reference an existing student.",
                        "example": 1
                    },
                    "fee_id": {
                        "type": "integer",
                        "description": "The ID of the fee being paid. Must reference an existing fee.",
                        "example": 1
                    },
                    "amount_paid": {
                        "type": "number",
                        "description": "The amount paid by the student. Must be a positive number.",
                        "example": 2500
                    },
                    "payment_method": {
                        "type": "string",
                        "description": "The method used for payment. Must be one of the accepted payment methods.",
                        "example": "bank_transfer"
                    },
                    "transaction_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The transaction ID from the payment processor. Optional unique identifier for the transaction.",
                        "example": "TXN123456789"
                    },
                    "payment_date": {
                        "type": "string",
                        "description": "The date when the payment was made. Must be a valid date format.",
                        "example": "2024-12-01"
                    },
                    "status": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The current status of the payment. Must be one of the predefined payment statuses.",
                        "example": "completed"
                    },
                    "remarks": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Additional remarks or notes about the payment. Optional comments about the payment.",
                        "example": "Partial payment for semester fee"
                    }
                },
                "required": [
                    "student_id",
                    "fee_id",
                    "amount_paid",
                    "payment_method",
                    "payment_date"
                ],
                "title": "PaymentRequest"
            },
            "ProgramRequest": {
                "type": "object",
                "description": "Request validation for program operations.\n\nHandles validation for creating and updating academic programs.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the academic program. A descriptive name for the program.",
                        "example": "Bachelor of Science in Computer Science"
                    },
                    "code": {
                        "type": "string",
                        "description": "The unique program code. A short identifier for the program, must be unique.",
                        "example": "BSCS"
                    },
                    "department_id": {
                        "type": "integer",
                        "description": "The ID of the department offering the program. Must reference an existing department.",
                        "example": 1
                    },
                    "duration": {
                        "type": "integer",
                        "description": "The duration of the program in years. Must be at least 1 year.",
                        "example": 4
                    }
                },
                "required": [
                    "name",
                    "code",
                    "department_id",
                    "duration"
                ],
                "title": "ProgramRequest"
            },
            "ResultRequest": {
                "type": "object",
                "description": "Request validation for result operations.\n\nHandles validation for creating and updating student exam results.",
                "properties": {
                    "student_id": {
                        "type": "integer",
                        "description": "The ID of the student whose result is being recorded. Must reference an existing student.",
                        "example": 1
                    },
                    "course_id": {
                        "type": "integer",
                        "description": "The ID of the course for which the result is recorded. Must reference an existing course.",
                        "example": 1
                    },
                    "exam_id": {
                        "type": "integer",
                        "description": "The ID of the exam for which the result is recorded. Must reference an existing exam.",
                        "example": 1
                    },
                    "semester_id": {
                        "type": "integer",
                        "description": "The ID of the semester when the exam was taken. Must reference an existing semester.",
                        "example": 1
                    },
                    "score": {
                        "type": "number",
                        "description": "The score achieved by the student. Must be between 0 and 100.",
                        "example": 85.5
                    },
                    "grade_id": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "description": "The ID of the grade assigned based on the score. Optional reference to a grade record.",
                        "example": 1
                    },
                    "remarks": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Additional remarks or comments about the result. Optional notes about the student's performance.",
                        "example": "Excellent performance in practical section"
                    }
                },
                "required": [
                    "student_id",
                    "course_id",
                    "exam_id",
                    "semester_id",
                    "score"
                ],
                "title": "ResultRequest"
            },
            "SemesterRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the semester. A descriptive label of the semester.",
                        "example": "First Semester"
                    },
                    "start_date": {
                        "type": "string",
                        "description": "The start date of the semester. Must be a valid date.",
                        "example": "2024-09-01"
                    },
                    "end_date": {
                        "type": "string",
                        "description": "The end date of the semester. Must be a date after the start date.",
                        "example": "2025-01-15"
                    },
                    "academic_session_id": {
                        "type": "integer",
                        "description": "The ID of the associated academic session. Must exist in the academic_sessions table.",
                        "example": 1
                    }
                },
                "required": [
                    "name",
                    "start_date",
                    "end_date",
                    "academic_session_id"
                ],
                "title": "SemesterRequest"
            },
            "StaffRequest": {
                "type": "object",
                "description": "Request validation for staff operations.\n\nHandles validation for creating and updating staff records.",
                "properties": {
                    "name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The full name of the staff member. Optional full name of the staff member.",
                        "example": "Dr. Jane Smith"
                    },
                    "email": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The email address of the staff member. Must be unique and a valid email format.",
                        "example": "jane.smith@university.edu"
                    },
                    "password": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The password for the staff member's account. Must be at least 8 characters long.",
                        "example": "securepassword123"
                    },
                    "phone": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The phone number of the staff member. Contact phone number.",
                        "example": "+1234567890"
                    },
                    "gender": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The gender of the staff member. Must be one of the predefined gender options.",
                        "example": "female"
                    },
                    "address": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The residential address of the staff member. Full address information.",
                        "example": "123 University Avenue, City, State, ZIP"
                    },
                    "staff_id": {
                        "type": "string",
                        "description": "The unique staff identification number. Must be unique across all staff members.",
                        "example": "STAFF001"
                    },
                    "department_id": {
                        "type": "integer",
                        "description": "The ID of the department the staff member belongs to. Must reference an existing department.",
                        "example": 1
                    },
                    "position": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The position or job title of the staff member. Optional job title or position.",
                        "example": "Associate Professor"
                    },
                    "joining_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The date when the staff member joined the institution. Optional joining date.",
                        "example": "2020-09-01"
                    }
                },
                "required": [
                    "staff_id",
                    "department_id"
                ],
                "title": "StaffRequest"
            },
            "StudentAssignmentRequest": {
                "type": "object",
                "description": "Request validation for student assignment submission operations.\n\nHandles validation for creating and updating student assignment submissions.",
                "properties": {
                    "student_id": {
                        "type": "integer",
                        "description": "The ID of the student submitting the assignment. Must reference an existing student.",
                        "example": 1
                    },
                    "assignment_id": {
                        "type": "integer",
                        "description": "The ID of the assignment being submitted. Must reference an existing assignment.",
                        "example": 1
                    },
                    "submission": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The submission content or file path. Optional text content or file reference for the submission.",
                        "example": "Solution to the binary search tree implementation..."
                    },
                    "submission_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The date when the assignment was submitted. Optional submission timestamp.",
                        "example": "2024-12-10 14:30:00"
                    },
                    "score": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "description": "The score awarded for the assignment. Must be a positive number if provided.",
                        "example": 85
                    },
                    "remarks": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Additional remarks or feedback on the submission. Optional comments from the instructor.",
                        "example": "Good implementation, but could improve code documentation"
                    }
                },
                "required": [
                    "student_id",
                    "assignment_id"
                ],
                "title": "StudentAssignmentRequest"
            },
            "StudentRequest": {
                "type": "object",
                "description": "Request validation for student operations.\n\nHandles validation for creating and updating student records.",
                "properties": {
                    "name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The full name of the student. Optional full name of the student.",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The email address of the student. Must be unique and a valid email format.",
                        "example": "john.doe@student.university.edu"
                    },
                    "password": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The password for the student's account. Must be at least 8 characters long.",
                        "example": "securepassword123"
                    },
                    "phone": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The phone number of the student. Contact phone number.",
                        "example": "+1234567890"
                    },
                    "gender": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The gender of the student. Must be one of the predefined gender options.",
                        "example": "male"
                    },
                    "address": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The residential address of the student. Full address information.",
                        "example": "456 Student Housing, University Campus"
                    },
                    "student_id": {
                        "type": "string",
                        "description": "The unique student identification number. Must be unique across all students.",
                        "example": "STU2024001"
                    },
                    "program_id": {
                        "type": "integer",
                        "description": "The ID of the program the student is enrolled in. Must reference an existing program.",
                        "example": 1
                    },
                    "parent_id": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "description": "The ID of the student's parent or guardian. Optional reference to a parent record.",
                        "example": 1
                    },
                    "admission_date": {
                        "type": "string",
                        "description": "The date when the student was admitted. Must be a valid date.",
                        "example": "2024-09-01"
                    },
                    "current_semester": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "description": "The current semester the student is in. Must be at least 1 if provided.",
                        "example": 3
                    },
                    "status": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The current status of the student. Must be one of the predefined student statuses.",
                        "example": "active"
                    }
                },
                "required": [
                    "student_id",
                    "program_id",
                    "admission_date"
                ],
                "title": "StudentRequest"
            },
            "UserRequest": {
                "type": "object",
                "description": "Request validation for user operations.\n\nHandles validation for creating and updating user accounts.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The full name of the user. A required full name for the user account.",
                        "example": "Alice Johnson"
                    },
                    "email": {
                        "type": "string",
                        "description": "The email address of the user. Must be unique and a valid email format.",
                        "example": "alice.johnson@example.com"
                    },
                    "phone": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The phone number of the user. Optional contact phone number.",
                        "example": "+1234567890"
                    },
                    "gender": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The gender of the user. Must be one of the predefined gender options.",
                        "example": "female"
                    },
                    "address": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The residential address of the user. Optional full address information.",
                        "example": "789 Main Street, City, State, ZIP"
                    },
                    "photo": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The profile photo path or URL. Optional reference to user's profile picture.",
                        "example": "/uploads/photos/user123.jpg"
                    },
                    "password": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The password for the user account. Optional password, must be at least 8 characters if provided.",
                        "example": "securepassword123"
                    }
                },
                "required": [
                    "name",
                    "email"
                ],
                "title": "UserRequest"
            }
        },
        "responses": {
            "ValidationException": {
                "description": "Validation error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Errors overview."
                                },
                                "errors": {
                                    "type": "object",
                                    "description": "A detailed description of each field that failed validation.",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "required": [
                                "message",
                                "errors"
                            ]
                        }
                    }
                }
            },
            "AuthorizationException": {
                "description": "Authorization error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            }
        }
    }
}